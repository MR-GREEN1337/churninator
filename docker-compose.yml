# ==============================================================================
# Docker Compose for LOCAL DEVELOPMENT (Mac / non-NVIDIA)
# ==============================================================================
# This is the default configuration, managed by the Makefile.
# It uses the Mac-compatible inference server and mounts local code for hot-reloading.
# ==============================================================================

services:
  # --- CORE INFRASTRUCTURE ---
  db:
    image: postgres:17-alpine
    platform: linux/arm64
    container_name: churninator_db_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    platform: linux/arm64
    container_name: churninator_redis_dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- APPLICATION SERVICES ---
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    platform: linux/arm64
    container_name: churninator_api_dev
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    platform: linux/arm64
    container_name: churninator_worker_dev
    depends_on:
      - redis
      - inference_server
    volumes:
      - ./backend:/app/
      - ./forge/utils:/app/forge/utils
      - playwright_browsers:/pw_browsers
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app

  inference_server:
    build:
      context: .
      dockerfile: docker/Dockerfile.inference.mac # <-- Uses the Mac-specific Dockerfile
    platform: linux/arm64
    container_name: churninator_inference_dev
    # NO 'deploy' KEY. This is the critical difference.
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
      - ./forge/checkpoints:/app/models # Mount local checkpoints for testing
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app

  frontend:
      build:
        context: .
        dockerfile: docker/Dockerfile.frontend
      platform: linux/arm64
      container_name: churninator_frontend_dev
      # Add the command to run the Next.js development server
      command: sh -c "npm install && npm run dev"
      depends_on:
        - api
      ports:
        - "3000:3000"
      volumes:
        - ./web:/app
        - /app/node_modules
        - /app/.next
      environment:
        - NODE_ENV=development # Change to development
        - NEXT_PUBLIC_API_URL=http://localhost:8000

# --- NAMED VOLUMES ---
volumes:
  postgres_data:
  playwright_browsers:
